use crate::hashing_to_the_curve::traits::SSWU;
use noah_algebra::new_secp256k1_fq;
use noah_algebra::secp256k1::SECP256K1Fq;

///
pub type Secp256k1SW = SECP256K1Fq;

impl SSWU<SECP256K1Fq> for Secp256k1SW {
    const K10: SECP256K1Fq = new_secp256k1_fq!(
        "64328938465175664124206102782604393251816658147578091133031991115504908150983"
    );
    const K11: SECP256K1Fq = new_secp256k1_fq!(
        "3540463234204664767867377763959255381561641196938647754971861192896365225345"
    );
    const K12: SECP256K1Fq = new_secp256k1_fq!(
        "37676595701789655284650173187508961899444205326770530105295841645151729341026"
    );
    const K13: SECP256K1Fq = new_secp256k1_fq!(
        "64328938465175664124206102782604393251816658147578091133031991115504908150924"
    );
    const K20: SECP256K1Fq = new_secp256k1_fq!(
        "95592507323525948732419199626899895302164312317343489384240252208201861084315"
    );
    const K21: SECP256K1Fq = new_secp256k1_fq!(
        "107505182841474506714709588670204841388457878609653642868747406790547894725908"
    );
    const K22: SECP256K1Fq = new_secp256k1_fq!("1");
}
